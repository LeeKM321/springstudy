<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.springstudy.springmvc.chap04.mapper.BoardMapper">

    <sql id="search">
        <if test="type == 'title'">
            WHERE title LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="type == 'content'">
            WHERE content LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="type == 'writer'">
            WHERE writer LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="type == 'tc'">
            WHERE title LIKE CONCAT('%', #{keyword}, '%')
            OR content LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </sql>


    <insert id="save">
        INSERT INTO tbl_board
        (title, content, writer)
        VALUES(#{title}, #{content}, #{writer})
    </insert>

    <delete id="delete">
        DELETE FROM tbl_board
        WHERE board_no = #{boardNo}
    </delete>

    <update id="updateViewCount">
        UPDATE tbl_board
        SET view_count = view_count + 1
        WHERE board_no = #{bno}
    </update>

    <!--
    SELECT의 경우에는 반환되는 타입을 작성해 주어야 합니다.
    resultType을 통해 리턴되는 객체의 타입을 얘기해 줍니다.
    데이터베이스의 컬럼명과 엔터티의 필드명이 동일해야 합니다. (스네이크케이스 -> 카멜케이스 변환은 따로 설정을 통해 처리)
    ex) board_no : boardNo (o)  board_num : bnum (x)
    -->

    <select id="findAll" resultType="board">
        SELECT * FROM tbl_board
        <include refid="search" />
        ORDER BY board_no DESC
        LIMIT #{pageStart}, #{amount}
    </select>

    <select id="findOne" resultType="board">
        SELECT * FROM tbl_board
        WHERE board_no = #{boardNo}
    </select>

    <!-- 총 게시물을 구하는 메서드도 SearchDTO를 전달받아야 한다. -->
    <!-- 검색 결과에 따른 페이징이 진행되어야 하기 때문. (검색 결과는 총 게시물 개수보다 작을 확률이 높음) -->
    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM tbl_board
        <include refid="search" />
    </select>


</mapper>













